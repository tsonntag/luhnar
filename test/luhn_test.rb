# encoding: UTF-8
$:.unshift File.expand_path( '../lib/', File.dirname( __FILE__))

require 'minitest/autorun'
require 'luhn'

class LuhnTest < MiniTest::Unit::TestCase
  
  DATA = %w( 89490240001434017831
89490240001434017849
89490240001434017856
89490240001434017864
89490240001434017872
89490240001434017880
89490240001434017898
89490240001434017906
89490240001434017914
89490240001434017922
89490240001434017930
89490240001434017948
89490240001434017955
89490240001434017963
89490240001434017971
89490240001434017989
89490240001434017997
89490240001434018003
89490240001434018011
89490240001434018029
89490240001434018037
89490240001434018045
89490240001434018052
89490240001434018060
89490240001434018078
89490240001434018086
89490240001434018094
89490240001434018102
89490240001434018110
89490240001434018128
89490240001434018136
89490240001434018144
89490240001434018151
89490240001434018169
  )

  def test_compute_all
    DATA.each do |i|
      i.chomp!
      digit = i.slice(-1..-1)
      number = i.chop
      assert_equal digit.to_i, Luhn.compute( number )
    end
  end

  def test_compute
    assert_equal 3, Luhn.compute( '8949024000143401782' )
  end

  def test_compute_number
    assert_equal 3, Luhn.compute( 8949024000143401782 )
  end

end
